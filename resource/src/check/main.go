package main

import (
	"encoding/json"
	"fmt"
	"log"
	"models"
	"net/http"
	"os"
)

const cveURL string = "http://www.cvedetails.com/json-feed.php?numrows=30&vendor_id=%s&product_id=%sorder_by=3"

func getCVES(request models.CheckRequest) []models.Version {

	var versions []models.Version
	var cve models.CVE

	requestURL := fmt.Sprintf(cveURL, request.Source.Vendor, request.Source.Product)
	resp, err := http.Get(requestURL)
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()

	dec := json.NewDecoder(resp.Body)
	_, err = dec.Token()
	if err != nil {
		log.Fatal(err)
	}

	for dec.More() {
		err := dec.Decode(&cve)
		if err != nil {
			log.Fatal(err)
		}

		if request.Version.CVE == "" {
			versions = append(versions, models.Version{CVE: cve.CveID})
			break
		}

		if request.Version.CVE <= cve.CveID {
			versions = append(versions, models.Version{CVE: cve.CveID})
		} else {
			break
		}

	}
	return versions
}

func getRequest() models.CheckRequest {
	var request models.CheckRequest
	err := json.NewDecoder(os.Stdin).Decode(&request)
	if err != nil {
		log.Fatal(err)
	}
	return request
}

func main() {
	request := getRequest()
	versions := getCVES(request)
	json.NewEncoder(os.Stdout).Encode(versions)
}
